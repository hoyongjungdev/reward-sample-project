openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: https://api.server.test/v1
paths:
  /notifications:
    get:
      description: |
        - getNotifications
        - 보상 데이터 상세 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
  /rewards:
    post:
      description: |
        - issueReward
        - 보상 지급 받기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /rewards/histories:
    get:
      description: |
        - getRewardHistories
        - 보상 조회
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
          required: true
          description: 조회 일자
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - asc
              - desc
          required: true
          description: 정렬 기준
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  reward_histories:
                    type: array
                    items:
                      type: object
                      properties:
                        issued_at:
                          type: string
                          format: date-time
                          description: 지급 시간
                        username:
                          type: string
                        amount:
                          type: integer
                          description: 지급한 포인트
                        consecutive_day:
                          type: integer
                          description: 지급 연속 일자
  /users:
    post:
      description: |
        - createUser
        - 사용자 생성
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400BadRequest'

components:
  schemas:
    Notification:
      type: object
      properties:
        notifications:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              descriptions:
                type: array
                items:
                  type: object
                  properties:
                    line:
                      type: string
                    subline:
                      type: array
                      items:
                        type: string
    ErrorCode:
      type: string
      enum:
        - DUPLICATE_REWARD
        - REWARD_EXHAUSTED
        - DUPLICATE_USERNAME
        - VALIDATION_ERROR
        - USER_NOT_FOUND
        - WRONG_DATE_FORMAT
      description: |
        * `DUPLICATE_REWARD` - 이미 보상을 지급 받은 경우
        * `REWARD_EXHAUSTED` - 오늘의 보상이 모두 소진된 경우
        * `DUPLICATE_USERNAME` - 이미 존재하는 username인 경우
        * `VALIDATION_ERROR` - 입력 검증에 실패한 경우
        * `USER_NOT_FOUND` - 사용자를 찾을 수 없는 경우
        * `WRONG_DATE_FORMAT` - 일자 형식이 잘못된 경우
  responses:
    200Success:
      description: 성공
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
    400BadRequest:
      description: 검증 예외 발생
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              status:
                type: string
                description: HTTP status
              code:
                $ref: '#/components/schemas/ErrorCode'
              message:
                type: string
                description: 에러 메시지
    404NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              status:
                type: string
                description: HTTP status
              code:
                $ref: '#/components/schemas/ErrorCode'
              message:
                type: string
                description: 에러 메시지
